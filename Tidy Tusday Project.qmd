---
title: "TidyTuesdaywork"
format: html
editor: visual
---

```{r}
library(tidytuesdayR)
library(tidyverse)

ufo_sightings <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/ufo_sightings.csv")
post_vars <- 4
places <- read_csv("https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/places.csv")

day_parts_map <- read_csv("https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/day_parts_map.csv")

```

```{r}
# Get the Data

# Read in with tidytuesdayR package 
# Install from CRAN via: install.packages("tidytuesdayR")
# This loads the readme and all the datasets for the week of interest

# Either ISO-8601 date or year/week works!

tuesdata <- tidytuesdayR::tt_load('2023-06-20')
tuesdata <- tidytuesdayR::tt_load(2023, week = 25)

ufo_sightings <- tuesdata$`ufo_sightings`
places <- tuesdata$`places`
day_parts_map <- tuesdata$`day_parts_map`

# Or read in the data manually

ufo_sightings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/ufo_sightings.csv')
places <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/places.csv')
day_parts_map <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/day_parts_map.csv')
```

Cleaning script:

```{r}
# All packages used in this script:
library(tidyverse)
library(here)
library(withr)

url <- "https://github.com/jonthegeek/apis/raw/main/data/data_ufo_reports_with_day_part.rds"
ufo_path <- withr::local_tempfile(fileext = ".rds")
download.file(url, ufo_path)

ufo_data_original <- readRDS(ufo_path)

# We need to make the csv small enough that github won't choke. We'll pull out
# some of the joined data back into separate tables.

ufo_sightings <- ufo_data_original |> 
  dplyr::select(
    reported_date_time:city,
    state, 
    country_code,
    shape:has_images,
    day_part
  ) |> 
  # This got normalized after the data was saved, re-normalize.
  dplyr::mutate(
    shape = tolower(shape)
  )

places <- ufo_data_original |>
  dplyr::select(
    city:country_code, 
    latitude:elevation_m
  ) |> 
  dplyr::distinct()

# We'll also provide the map of "day parts" in case anybody wants to do
# something with that.
url2 <- "https://github.com/jonthegeek/apis/raw/main/data/data_day_parts_map.rds"
day_parts_path <- withr::local_tempfile(fileext = ".rds")
download.file(url2, day_parts_path)

day_parts_map <- readRDS(day_parts_path)

readr::write_csv(
  ufo_sightings,
  here::here(
    "data",
    "2023",
    "2023-06-20",
    "ufo_sightings.csv"
  )
)

readr::write_csv(
  places,
  here::here(
    "data",
    "2023",
    "2023-06-20",
    "places.csv"
  )
)

readr::write_csv(
  day_parts_map,
  here::here(
    "data",
    "2023",
    "2023-06-20",
    "day_parts_map.csv"
  )
)
```

```{r}
sightings_per_year <- ufo_sightings |> 
  mutate(year = year(reported_date_time_utc)) |> 
  count(year)
sightings_per_year |> 
  ggplot()+
  geom_line(aes(x=year,y=n))+
  scale_x_continuous(
    breaks = seq(1925,2023,5),
    labels = seq(1925,2023,5)
  )
```

```{r}
library(gridExtra)
plot_list <- list()
for (i in c(1925, 1928:1931, 1934, 1937, 1939:2023)) {
  filtered_data <- ufo_data_original |>
    filter(year(reported_date_time_utc) == i)
  plot <- ggplot(filtered_data) +
    geom_point(aes(x = longitude, y = latitude,fill="blue"),
               alpha = .25,
               position = "jitter") +
    scale_x_continuous(limits = c(-180, 180)) +
    scale_y_continuous(limits = c(-55, 75))
  plot_list[[i]] <- plot
}
for (i in c(1925, 1928:1931, 1934, 1937, 1939:2023)) {
  print(plot_list[[i]])
}


```

```{r}
library(maps)
library(mapdata)
world_map <- map_data("world")
 filtered_data <- ufo_data_original |>
    filter(year(reported_date_time_utc) %in% 1928:1931)
ggplot() +
   geom_polygon(
     data = world_map,
     aes(x = long, y = lat, group = group),
     fill = "lightgray",
     color = "gray"
   ) +
   geom_point(
     data = filtered_data,
     aes(x = longitude, y = latitude),
     color = "red",fill = "red",
     alpha = 0.1,
     position = "jitter"
   ) +
   scale_x_continuous(limits = c(-180, 180)) +
   scale_y_continuous(limits = c(-55, 75)) +
   coord_quickmap() +
   theme_minimal()+
   labs(title = paste("All UFO sightings from 1925 till",sep=" "))+
   theme(plot.title = element_text(hjust = 0.5))
```

```{r}
for (i in c(1925, 1928:1931, 1934, 1937, 1939:2023)) { #
filtered_data <- ufo_data_original |>
  filter(year(reported_date_time_utc) %in% 1925:i)
plot <- ggplot() +
   geom_polygon(
     data = world_map,
     aes(x = long, y = lat, group = group),
     fill = "lightgray",
     color = "gray"
   ) +
   geom_point(
     data = filtered_data,
     aes(x = longitude, y = latitude),
     color = "red",fill = "red",
     alpha = 0.1,
     position = "jitter"
   ) +
   scale_x_continuous(limits = c(-180, 180)) +
   scale_y_continuous(limits = c(-55, 75)) +
   coord_quickmap() +
   theme_minimal()+
   labs(title = paste("All UFO sightings from 1925 till",i,sep=" "))+
   theme(plot.title = element_text(hjust = 0.5,color = "red"))

  ggsave(plot = plot, filename = paste0("plot",i,".png"))
}
```

```{r}
for (i in c(1925, 1928:1931, 1934, 1937, 1939:2023)){
  ggsave(plot = plot_list[[i]], filename = paste0("plot",i,".png"))
}

  ggsave(plot = plot_list[[2023]], filename = paste0("plot",2023,".png"))

```
